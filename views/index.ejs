<!DOCTYPE html>
<html lang="en">
   <head>
      <title>MineSweeper</title>
      <link rel="stylesheet" type="text/css" href="style.css">
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
      <script type ="text/javascript" src="/socket.io/socket.io.js"></script>
      <script type='text/javascript'>
      var mapHeight;
      var mapWidth;
      var game_num = -1;
      var socket = io.connect();

      function uncoverAll(x){
        for(var i = 0; i <= x; i++){
          if (i == 0 || i == 10){
            if (i == 10){
              $("."+i).css("background-color", "red")
              $("."+i).html("<img src = 'images/bomb.png' alt = 'B'>");
            }
            else{
              $("."+i).css("background-color", "silver")
            }
          }
          else{
            $("."+i).html("<h3>"+$("."+i).attr("class")+"</h3>")
            $("."+i).css("background-color", "silver")
          }
        }
      }
      function clearZeros(x,y){
        x = Number(x);
        y = Number(y);
        if (x < mapHeight && x >= 0 && y < mapWidth && y >=0){
          var id = "#"+x+"-"+y;
          //checking to see if background color is silver, can just check for the word silver as .css("background-color") returns color in rgb format
          if ($(id).css("background-color") != "rgb(192, 192, 192)"){
            $(id).css("background-color", "silver")
            $(id).html("")
            if ($(id).attr("class") == 0){
              clearZeros(x+1,y+1);
              clearZeros(x,y+1);
              clearZeros(x-1,y+1);
              clearZeros(x+1,y);
              clearZeros(x-1,y);
              clearZeros(x+1,y-1);
              clearZeros(x,y-1);
              clearZeros(x-1,y-1);
            }
            else{
              $(id).html("<h3>"+$(id).attr("class")+"</h3>")
            }
          }
        }
      }
      $(document).ready(function(){
        document.oncontextmenu = function() {
          return false;
        };

        socket.on('create_map', function(data){
          mapHeight = data.mapHeight;
          mapWidth = data.mapWidth;
          game_num = data.game_num;
          $("#map").css("width", data.mapWidth*26 + "px")//sets body of html to the width of the map generated
          $("#map").html(data.map);
        })
        socket.on('render_map', function(data){
          if(game_num == data.game_num){
            $("#map").css("width", data.mapWidth*26 + "px")//sets body of html to the width of the map generated
            $("#map").html(data.map);
          }
        })
        $('#reset_map').click(function(){
          socket.emit('reset_map', {game_num:game_num})
        })
      })
      $(document).on("mousedown", "div", function(event){
        if( event.button == 2 && $(this).css("background-color") != "rgb(192, 192, 192)") {
          $(this).html("<img class = 'flag' src = 'images/flag.png' alt = 'F'>");
          socket.emit('update_map', {map:$('#map').html(), game_num:game_num})

          return false;
        }
        socket.emit('update_map', {map:$('#map').html(), game_num:game_num})
        return true;
      })
      $(document).on("click", "div",function(event){
        event.stopPropagation(); //stops the click from effecting divs behind the one clicked on
        //if tile is flagged then unflag it and do nothing else
        if($(this).html() == '<img class="flag" src="images/flag.png" alt="F">'){
          $(this).html("");
          socket.emit('update_map', {map:$('#map').html(), game_num:game_num})
          return;
        }
        //if not a bomb and not an empty square, uncover tile and put its number on it
        if($(this).attr("class") != 10 && $(this).attr("class") != 0){
          $(this).css("background-color", "silver")
          $(this).html("<h3>"+$(this).attr("class")+"</h3>")
          socket.emit('update_map', {map:$('#map').html(), game_num:game_num})
        }
        //if tile is a bomb uncover tile with red background and bomb image then uncover all tiles
        else if ($(this).attr("class") == 10){
          $(this).css("background-color", "red")
          $(this).html("<img src = 'images/bomb.png' alt = 'B'>");
          uncoverAll(10);//uncovers all tiles when passed an argument of 10
          socket.emit('update_map', {map:$('#map').html(), game_num:game_num})
        }
        else {
          //if tile is empty (no number or bomb) clear all the tiles around it
          clearZeros($(this).attr("idx"),$(this).attr("idy")); //passes the x and y corrdinates of the tile clicked into the clear function
          $(this).css("background-color", "silver");
          $(this).html("");
          socket.emit('update_map', {map:$('#map').html(), game_num:game_num})
        }
      })
      // initializeMap();//page loads and the map is initialized to 0 in all blocks
      // generateMap(100);
      // displayMap();
    </script>
   </head>
   <body>
     <!-- the map div must be created before the script is run as the script tries to add things to the map div itself -->
     <h1>MineSweeper</h1>
     <div id = "map">
     </div><br><br><br>
     <form action=#>
       <input id='reset_map' type='submit' value="Reset Map">
     </form>
   </body>
</html>
